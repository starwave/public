apply plugin: 'com.android.application'

android {
    signingConfigs {
        if (System.properties['os.name'].toLowerCase().contains('windows')) {
            debug {
                storeFile file(System.getProperty("project.projectdir") + '\\..\\..\\debug.keystore')
                storePassword 'android'
                keyAlias = 'androiddebugkey'
                keyPassword 'android'
            }
        } else {
            debug {
                storeFile file(System.getProperty("project.projectdir") + '/../../debug.keystore')
                storePassword 'android'
                keyAlias = 'androiddebugkey'
                keyPassword 'android'
            }
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.thirdwavesoft.wallpaperinfo"
        minSdkVersion 21
        targetSdkVersion 29 // TODO raise to 29 after change FileProvider
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    // TODO apk copy only after release build
    android.applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {
            if (System.properties['os.name'].toLowerCase().contains('windows')) {
                task copyApkWin(dependsOn: assembleRelease) {
                    println "For Windows"
                    println "" + project.projectDir + "\\release\\app-release.apk"
                    println System.getProperty("user.home") + "\\Documents\\CloudStation\\Install\\Android\\wallpaperinfo_api29.apk"
                    copy {
                        from file("" + project.projectDir + "\\release\\app-release.apk")
                        into file(System.getProperty("user.home") + "\\Documents\\CloudStation\\Install\\Android")
                        rename { String fileName ->
                            fileName.replace("app-release.apk", "wallpaperinfo_api29.apk")
                        }
                    }
                }
            } else {
                task copyApkMac(dependsOn: assembleRelease) {
                    println "For Mac OS X"
                    // println System.getProperty("Project.projectdir") + "/release/app-release.apk"
                    println "" + project.projectDir + "/release/app-release.apk"
                    println System.getProperty("user.home") + "/Documents/CloudStation/Install/Android/wallpaperinfo_api29.apk"
                    copy {
                        from file("" + project.projectDir + "/release/app-release.apk")
                        into file(System.getProperty("user.home") + "/Documents/CloudStation/Install/Android")
                        rename { String fileName ->
                            fileName.replace("app-release.apk", "wallpaperinfo_api29.apk")
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    //noinspection GradleCompatible
    implementation "com.android.support:support-compat:28.0.0"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
}



